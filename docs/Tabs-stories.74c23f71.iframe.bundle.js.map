{"version":3,"file":"Tabs-stories.74c23f71.iframe.bundle.js","mappings":";;;AAaA;AACA;AAGA","sources":["webpack://@arthur/docs/../../packages/arthur-ui/src/Tabs/Tabs.tsx"],"sourcesContent":["import type { PropsWithChildren } from 'react';\r\nimport { useCallback, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TabsContext } from './TabsContext';\r\n\r\nexport interface TabsProps {\r\n    defaultActiveItem?: number | string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst StyledRoot = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: 1px solid ${(props) => props.theme.token.color.palette.gray[10]};\r\n    border-radius: ${(props) => props.theme.token.radius.border.basic};\r\n`;\r\n\r\nfunction Tabs(props: PropsWithChildren<TabsProps>) {\r\n    const { children, defaultActiveItem, disabled } = props;\r\n\r\n    const [activeItem, setActiveItem] = useState(defaultActiveItem);\r\n\r\n    const handleChange = useCallback((event: React.MouseEvent<HTMLButtonElement>, id: number | string) => {\r\n        setActiveItem(id);\r\n    }, []);\r\n\r\n    const tabsContext = useMemo(() => {\r\n        return {\r\n            activeItem,\r\n            onChange: handleChange,\r\n            disabled,\r\n        };\r\n    }, [activeItem, disabled, handleChange]);\r\n\r\n    return (\r\n        <TabsContext.Provider value={tabsContext}>\r\n            <StyledRoot className='tab-menu'>{children}</StyledRoot>\r\n        </TabsContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Tabs;\r\nTabs.displayName = 'Tabs';\r\n"],"names":[],"sourceRoot":""}