{"version":3,"file":"list-List-stories.0d8460a2.iframe.bundle.js","mappings":";;;;;AAYA;;AAGA;;;AAGA;;AAGA;;;;AAIA;;;;;AAQA;AACA;AACA;;;;AAIA;;AAEA;AAeA;;;ACjDA;AACA;AACA;;;AASA","sources":["webpack://@arthur/docs/../../packages/arthur-ui/src/List/List.tsx","webpack://@arthur/docs/../../packages/arthur-ui/src/List/ListItem.tsx"],"sourcesContent":["import type { PropsWithChildren } from 'react';\nimport { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport classnames from 'classnames';\nimport type { ListVariants } from './types';\nimport { ListVariantsEnum } from './types';\n\nconst variantStyles = {\n    default: css`\n        list-style-type: 'â€¢';\n        & ul {\n            list-style-type: '-';\n            margin-left: ${(props) => props.theme.token.size.spacing['large-1x']};\n        }\n    `,\n    ordered: css`\n        & ol {\n            list-style-type: lower-alpha;\n            margin-left: ${(props) => props.theme.token.size.spacing['large-2x']};\n        }\n    `,\n    plain: css`\n        & ol,\n        ul {\n            list-style-type: none;\n            margin-left: ${(props) => props.theme.token.size.spacing.small};\n        }\n        li {\n            list-style-type: none;\n        }\n    `,\n};\n\nconst StyledRoot = styled.ul<Pick<ListProps, 'columns'> & { variant: ListVariants }>`\n    color: ${(props) => props.theme.token.color.black};\n    font-size: ${(props) => props.theme.token.size.font.medium};\n    list-style-position: outside;\n    margin: 0px;\n    padding: 0px;\n    columns: ${(props) => (props.columns ? props.columns : 'initial')};\n\n    ${(props) => variantStyles[props.variant]}\n`;\n\nexport interface ListProps {\n    className?: string;\n    /**\n     * @default default\n     */\n    variant?: ListVariants;\n    /**\n     * Splits the layout into columns\n     */\n    columns?: number;\n}\n\nconst List = forwardRef<HTMLUListElement | HTMLOListElement, PropsWithChildren<ListProps>>((props, forwardedRef) => {\n    const { children, className, variant = ListVariantsEnum.default, ...rest } = props;\n\n    const classes = classnames(className, 'arthur-list', `arthur-list--variant-${variant}`);\n\n    return (\n        <StyledRoot\n            as={variant === 'ordered' ? 'ol' : 'ul'}\n            className={classes}\n            ref={forwardedRef}\n            variant={variant}\n            {...rest}\n        >\n            {children}\n        </StyledRoot>\n    );\n});\n\nexport default List;\nList.displayName = 'List';\n","import { PropsWithChildren } from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst StyledRoot = styled.li`\n        list-style-position: outside;\n        margin: 0px;\n        margin-bottom: ${(props) => props.theme.token.size.spacing['small-2x']};\n        margin-left: ${(props) => props.theme.token.size.spacing['small-1x']};\n        padding-left: ${(props) => props.theme.token.size.spacing['small-1x']};\n        line-height: 1.25;\n    }\n`;\n\nexport interface ListItemProps {\n    className?: string;\n}\n\nexport const ListItem = (props: PropsWithChildren<ListItemProps>) => {\n    const { children, className } = props;\n\n    const classes = classnames(className, 'arthur-list-item');\n\n    return <StyledRoot className={classes}>{children}</StyledRoot>;\n};\n\nListItem.displayName = 'ListItem';\n"],"names":[],"sourceRoot":""}